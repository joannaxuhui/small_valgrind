[
  {
    "timestamp": "2016-02-16 04:03:02.079296", 
    "testcases": [
      {
        "description": "Test with program that has no memory leaks.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n", 
        "name": "no_leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has memory leaks.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has bad frees.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n", 
        "name": "bad_free", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n", 
        "name": "full", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==26038== Memcheck, a memory error detector\n==26038== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==26038== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==26038== Command: ././full_test\n==26038== \n==26038== Invalid read of size 8\n==26038==    at 0x400C1D: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==26038==    by 0x400863: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==26038==  Address 0x51f6048 is 8 bytes inside a block of size 200 free'd\n==26038==    at 0x4C2AD17: free (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==26038==    by 0x400C11: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==26038==    by 0x400863: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==26038== \n==26038== Invalid read of size 8\n==26038==    at 0x400C1D: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==26038==    by 0x400903: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==26038==  Address 0x51f6158 is 8 bytes inside a block of size 180 free'd\n==26038==    at 0x4C2AD17: free (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==26038==    by 0x400C11: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==26038==    by 0x400903: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==26038== \n==26038== \n==26038== HEAP SUMMARY:\n==26038==     in use at exit: 0 bytes in 0 blocks\n==26038==   total heap usage: 3 allocs, 3 frees, 544 bytes allocated\n==26038== \n==26038== All heap blocks were freed -- no leaks are possible\n==26038== \n==26038== For counts of detected and suppressed errors, rerun with: -v\n==26038== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 2 from 2)\n", 
        "name": "memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "(Pull Time: 2016-02-18 | Revision # 23306)"
  }, 
  {
    "timestamp": "2016-02-16 16:02:33.508784", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "no_leak", 
        "description": "Test with program that has no memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "leak", 
        "description": "Test with program that has memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "bad_free", 
        "description": "Test with program that has bad frees."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "full", 
        "description": "Test with program that has a variety of issues."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==10483== Memcheck, a memory error detector\n==10483== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==10483== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==10483== Command: ././full_test\n==10483== \n==10483== Invalid read of size 8\n==10483==    at 0x400C1D: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==10483==    by 0x400863: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==10483==  Address 0x51f6048 is 8 bytes inside a block of size 200 free'd\n==10483==    at 0x4C2AD17: free (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10483==    by 0x400C11: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==10483==    by 0x400863: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==10483== \n==10483== Invalid read of size 8\n==10483==    at 0x400C1D: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==10483==    by 0x400903: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==10483==  Address 0x51f6158 is 8 bytes inside a block of size 180 free'd\n==10483==    at 0x4C2AD17: free (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10483==    by 0x400C11: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==10483==    by 0x400903: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==10483== \n==10483== \n==10483== HEAP SUMMARY:\n==10483==     in use at exit: 0 bytes in 0 blocks\n==10483==   total heap usage: 3 allocs, 3 frees, 544 bytes allocated\n==10483== \n==10483== All heap blocks were freed -- no leaks are possible\n==10483== \n==10483== For counts of detected and suppressed errors, rerun with: -v\n==10483== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "memory", 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well."
      }
    ], 
    "revision": "(Pull Time: 2016-02-18 | Revision # 23306)"
  }, 
  {
    "timestamp": "2016-02-16 17:22:44.830399", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has no memory leaks.", 
        "name": "no_leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test with program that has memory leaks.", 
        "name": "leak", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has bad frees.", 
        "name": "bad_free", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues.", 
        "name": "full", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "name": "memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==29139== Memcheck, a memory error detector\n==29139== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==29139== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==29139== Command: ././full_test\n==29139== \n==29139== Invalid read of size 8\n==29139==    at 0x400C1D: remove_meta_data (in /home/btruong2/code/cs241/autograder2/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==29139==    by 0x400863: main (in /home/btruong2/code/cs241/autograder2/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==29139==  Address 0x51f6048 is 8 bytes inside a block of size 200 free'd\n==29139==    at 0x4C2AD17: free (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==29139==    by 0x400C11: remove_meta_data (in /home/btruong2/code/cs241/autograder2/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==29139==    by 0x400863: main (in /home/btruong2/code/cs241/autograder2/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==29139== \n==29139== Invalid read of size 8\n==29139==    at 0x400C1D: remove_meta_data (in /home/btruong2/code/cs241/autograder2/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==29139==    by 0x400903: main (in /home/btruong2/code/cs241/autograder2/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==29139==  Address 0x51f6158 is 8 bytes inside a block of size 180 free'd\n==29139==    at 0x4C2AD17: free (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==29139==    by 0x400C11: remove_meta_data (in /home/btruong2/code/cs241/autograder2/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==29139==    by 0x400903: main (in /home/btruong2/code/cs241/autograder2/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==29139== \n==29139== \n==29139== HEAP SUMMARY:\n==29139==     in use at exit: 0 bytes in 0 blocks\n==29139==   total heap usage: 3 allocs, 3 frees, 544 bytes allocated\n==29139== \n==29139== All heap blocks were freed -- no leaks are possible\n==29139== \n==29139== For counts of detected and suppressed errors, rerun with: -v\n==29139== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 2 from 2)\n"
      }
    ], 
    "revision": "(Pull Time: 2016-02-18 | Revision # 23763)"
  }, 
  {
    "timestamp": "2016-02-17 04:02:38.423117", 
    "testcases": [
      {
        "description": "Test with program that has no memory leaks.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n", 
        "name": "no_leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has memory leaks.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "leak", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has bad frees.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n", 
        "name": "bad_free", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\ntotal_free is incorrect.\n", 
        "name": "full", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==28539== Memcheck, a memory error detector\n==28539== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==28539== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==28539== Command: ././full_test\n==28539== \n==28539== Invalid read of size 8\n==28539==    at 0x400C1D: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==28539==    by 0x400863: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==28539==  Address 0x51f6048 is 8 bytes inside a block of size 200 free'd\n==28539==    at 0x4C2AD17: free (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==28539==    by 0x400C11: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==28539==    by 0x400863: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==28539== \n==28539== Invalid read of size 8\n==28539==    at 0x400C1D: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==28539==    by 0x400903: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==28539==  Address 0x51f6158 is 8 bytes inside a block of size 180 free'd\n==28539==    at 0x4C2AD17: free (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==28539==    by 0x400C11: remove_meta_data (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==28539==    by 0x400903: main (in /home/btruong2/code/cs241/autograder/lab/mini_valgrind/svn/huixu5/mini_valgrind/full_test)\n==28539== \n==28539== \n==28539== HEAP SUMMARY:\n==28539==     in use at exit: 0 bytes in 0 blocks\n==28539==   total heap usage: 3 allocs, 3 frees, 544 bytes allocated\n==28539== \n==28539== All heap blocks were freed -- no leaks are possible\n==28539== \n==28539== For counts of detected and suppressed errors, rerun with: -v\n==28539== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 2 from 2)\n", 
        "name": "memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "(Pull Time: 2016-02-18 | Revision # 24371)"
  }, 
  {
    "timestamp": "2016-02-18 00:03:26.941217", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "no_leak", 
        "description": "Test with program that has no memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "leak", 
        "description": "Test with program that has memory leaks."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "bad_free", 
        "description": "Test with program that has bad frees."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nbad_frees is incorrect.\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "full", 
        "description": "Test with program that has a variety of issues."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==29544== Memcheck, a memory error detector\n==29544== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==29544== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==29544== Command: ././full_test\n==29544== \nbad_frees is incorrect.\n==29544== \n==29544== HEAP SUMMARY:\n==29544==     in use at exit: 0 bytes in 0 blocks\n==29544==   total heap usage: 3 allocs, 3 frees, 544 bytes allocated\n==29544== \n==29544== All heap blocks were freed -- no leaks are possible\n==29544== \n==29544== For counts of detected and suppressed errors, rerun with: -v\n==29544== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "memory", 
        "description": "Test with program that has a variety of issues (but under valgrind now).\nNote that you had to get the full_test correct to pass this one as well."
      }
    ], 
    "revision": "(Pull Time: 2016-02-18 | Revision # 25322)"
  }
]